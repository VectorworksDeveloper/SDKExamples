#include "NNA_BaseConfiguration.xcconfig"

CLANG_CXX_LANGUAGE_STANDARD = c++20
CLANG_CXX_LIBRARY = libc++

// Use legacy linker in Xcode 15. The new linker doesn't relink targets that depend on a library when it's modified.
// Remove this once we figure out why this is happening or a newer Xcode version comes out that addresses the issue.
LD_CLASSIC_1200 = ;
LD_CLASSIC_1300 = ;
LD_CLASSIC_1400 = ;
LD_CLASSIC_1500 = -ld_classic;
OTHER_LDFLAGS = $(LD_CLASSIC_$(XCODE_VERSION_MAJOR))

REZ_PREPROCESSOR_DEFINITIONS = REZ_FOR_MACHO=1

DEBUG_INFORMATION_FORMAT = dwarf

GCC_VERSION	= $(GCC_VERSION_$(XCODE_VERSION_MINOR))
GCC_MODEL_TUNING =

BASE_APP_IDENTIFIER = com.yourcompany
GCC_INPUT_FILETYPE = sourcecode.cpp.objcpp;

CLANG_ANALYZER_DEADCODE_DEADSTORES = NO;
CLANG_ANALYZER_GCD = NO;
CLANG_ANALYZER_MEMORY_MANAGEMENT = YES

CLANG_ANALYZER_OBJC_ATSYNC = NO
CLANG_ANALYZER_OBJC_COLLECTIONS = NO
CLANG_ANALYZER_OBJC_INCOMP_METHOD_TYPES = NO
CLANG_ANALYZER_OBJC_NSCFERROR = NO
CLANG_ANALYZER_OBJC_RETAIN_COUNT = YES
CLANG_ANALYZER_OBJC_SELF_INIT = NO
CLANG_ANALYZER_OBJC_UNUSED_IVARS = NO

CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = NO
CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS = NO
CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP = NO
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = NO
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = NO
CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN = NO
CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK = NO
CLANG_ANALYZER_SECURITY_KEYCHAIN_API = NO

CLANG_ENABLE_MODULES = YES
//LLVM_LTO = YES
LLVM_VECTORIZE_LOOPS=YES

OUTPUT_NAME = Out64
SHARED_PRECOMPS_DIR = $(CONFIGURATION_TEMP_DIR)/PrecompiledHeader

OTHER_CFLAGS = $(OTHER_CFLAGS) -fpch-instantiate-templates
